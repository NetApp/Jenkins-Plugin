<?xml version='1.0' encoding='UTF-8'?>
<com.cloudbees.hudson.plugins.modeling.impl.builder.BuilderTemplate plugin="cloudbees-template@4.21">
  <actions/>
  <description>Creates a Local SCM on NetApp Storage</description>
  <displayName>Create Local SCM (NetApp)</displayName>
  <attributes>
    <template-attribute>
      <name>api</name>
      <displayName>API Server (IP Address:Port)</displayName>
      <helpHtml>Enter the IP Address and port of the API server. 

Example: 192.168.10.10:1024</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
    <template-attribute>
      <name>cred</name>
      <displayName>Select API Server Credential</displayName>
      <helpHtml>Select API Server Credential. 

Make sure that API Server Credentials were already stored under Jenkins Global Credentials.</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.CredentialsControl">
        <kind>com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl</kind>
      </control>
    </template-attribute>
    <template-attribute>
      <name>vs</name>
      <displayName>Storage Tenant(NetApp):</displayName>
      <helpHtml>Provide the name of the Storage Tenant i.e (SVM)  where the SCM volume should be created.

SVM names can be listed by using the &quot;List SVM and Aggregates (NetApp)&quot; step.</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
    <template-attribute>
      <name>ag</name>
      <displayName>Aggregate Name</displayName>
      <helpHtml>Provide the name of the Aggregate where the SCM volume should be created.

Aggregate names can be listed by using the &quot;List SVM and Aggregates (NetApp)&quot; step.</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
    <template-attribute>
      <name>vol</name>
      <displayName>Volume Name for Local SCM</displayName>
      <helpHtml>Provide the name of the volume for SCM.

It should being with &quot;netappdvp_&quot; tag. 

Example: netappdvp_SCMVolume</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
    <template-attribute>
      <name>uid</name>
      <displayName>User ID of SCM Owner</displayName>
      <helpHtml>Provide User ID of SCM Owner.</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
    <template-attribute>
      <name>gid</name>
      <displayName>Group ID of SCM Owner</displayName>
      <helpHtml>Provide Group ID of SCM Owner.</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
    <template-attribute>
      <name>size</name>
      <displayName>Volume Size for Local SCM (in MB)</displayName>
      <helpHtml>Provide size of the Volume for SCM in MB.</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
    <template-attribute>
      <name>cont</name>
      <displayName>SCM Container Name</displayName>
      <helpHtml>Provide a name for the docker container to run the SCM.</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
    <template-attribute>
      <name>hostip</name>
      <displayName>Host IP Address</displayName>
      <helpHtml>IP Address of the Host on which this SCM container will run.</helpHtml>
      <control class="com.cloudbees.hudson.plugins.modeling.controls.TextFieldControl"/>
    </template-attribute>
  </attributes>
  <properties/>
  <instantiable>true</instantiable>
  <help>This step creates a Local SCM for managing your code on prem.</help>
  <transformer class="com.cloudbees.hudson.plugins.modeling.impl.builder.RuntimeGroovyShellScriptTransformer">
    <script>python /tmp/ps/scm_config.py -v ${vol} -a ${api} -c ${cont} -apiuser ${cred.username} -apipass ${cred.password} -vs ${vs} -ag ${ag} -s ${size} -uid ${uid} -gid ${gid} -m \${JENKINS_URL} -ip ${hostip}
</script>
    <batch>false</batch>
    <sandbox>false</sandbox>
  </transformer>
</com.cloudbees.hudson.plugins.modeling.impl.builder.BuilderTemplate>
